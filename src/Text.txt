import React, { useState, useEffect, useRef } from "react";
import { Sun, Moon, GithubIcon, Linkedin, Mail } from "lucide-react";

const projects = [
  {
    id: 1,
    title: "Project 1",
    description: "A brief description of Project 1",
  },
  {
    id: 2,
    title: "Project 2",
    description: "A brief description of Project 2",
  },
  {
    id: 3,
    title: "Project 3",
    description: "A brief description of Project 3",
  },
];

const TechBackground = () => {
  const canvasRef = useRef(null);

  useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext("2d");
    let animationFrameId;

    const resizeCanvas = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    };

    window.addEventListener("resize", resizeCanvas);
    resizeCanvas();

    const particles = [];
    const particleCount = 100;

    for (let i = 0; i < particleCount; i++) {
      particles.push({
        x: Math.random() * canvas.width,
        y: Math.random() * canvas.height,
        size: Math.random() * 3 + 1,
        speedX: (Math.random() - 0.5) * 2,
        speedY: (Math.random() - 0.5) * 2,
      });
    }

    const drawParticles = () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.fillStyle = "rgba(255, 255, 255, 0.5)";

      particles.forEach((particle) => {
        ctx.beginPath();
        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);
        ctx.fill();

        particle.x += particle.speedX;
        particle.y += particle.speedY;

        if (particle.x < 0 || particle.x > canvas.width) particle.speedX *= -1;
        if (particle.y < 0 || particle.y > canvas.height) particle.speedY *= -1;
      });

      animationFrameId = requestAnimationFrame(drawParticles);
    };

    drawParticles();

    return () => {
      window.removeEventListener("resize", resizeCanvas);
      cancelAnimationFrame(animationFrameId);
    };
  }, []);

  return <canvas ref={canvasRef} className="absolute inset-0 z-0" />;
};

const Portfolio = () => {
  const [darkMode, setDarkMode] = useState(false);
  const [activeSection, setActiveSection] = useState("home");

  useEffect(() => {
    document.body.classList.toggle("dark", darkMode);
  }, [darkMode]);

  const toggleDarkMode = () => setDarkMode(!darkMode);

  return (
    <div className={`min-h-screen ${darkMode ? "dark" : ""}`}>
      <nav className="fixed top-0 left-0 right-0 z-20 bg-white dark:bg-gray-800 shadow-md">
        <div className="container mx-auto px-6 py-3 flex justify-between items-center">
          <a
            href="/"
            className="text-xl font-bold text-gray-800 dark:text-white"
          >
            My Portfolio
          </a>
          <div className="flex items-center">
            <button onClick={toggleDarkMode} className="p-2">
              {darkMode ? (
                <Sun className="text-yellow-400" />
              ) : (
                <Moon className="text-gray-800" />
              )}
            </button>
            <a
              href="#home"
              onClick={() => setActiveSection("home")}
              className={`mx-3 ${
                activeSection === "home"
                  ? "text-blue-500"
                  : "text-gray-600 dark:text-gray-300"
              }`}
            >
              Home
            </a>
            <a
              href="#projects"
              onClick={() => setActiveSection("projects")}
              className={`mx-3 ${
                activeSection === "projects"
                  ? "text-blue-500"
                  : "text-gray-600 dark:text-gray-300"
              }`}
            >
              Projects
            </a>
            <a
              href="#contact"
              onClick={() => setActiveSection("contact")}
              className={`mx-3 ${
                activeSection === "contact"
                  ? "text-blue-500"
                  : "text-gray-600 dark:text-gray-300"
              }`}
            >
              Contact
            </a>
          </div>
        </div>
      </nav>

      <main className="pt-16">
        <section
          id="home"
          className="relative min-h-screen flex items-center justify-center bg-gray-900"
        >
          <TechBackground />
          <div className="z-10 text-center">
            <h1 className="text-4xl font-bold mb-4 text-white">
              Welcome to My Portfolio
            </h1>
            <p className="text-xl text-gray-300">
              I'm a passionate developer creating amazing web experiences
            </p>
          </div>
        </section>

        <section id="projects" className="py-20 bg-white dark:bg-gray-800">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold mb-8 text-center text-gray-800 dark:text-white">
              My Projects
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {projects.map((project) => (
                <div
                  key={project.id}
                  className="bg-gray-100 dark:bg-gray-700 rounded-lg shadow-md p-6 transform hover:scale-105 transition-transform duration-300"
                >
                  <h3 className="text-xl font-semibold mb-2 text-gray-800 dark:text-white">
                    {project.title}
                  </h3>
                  <p className="text-gray-600 dark:text-gray-300">
                    {project.description}
                  </p>
                </div>
              ))}
            </div>
          </div>
        </section>

        <section id="contact" className="py-20 bg-gray-100 dark:bg-gray-900">
          <div className="container mx-auto px-6">
            <h2 className="text-3xl font-bold mb-8 text-center text-gray-800 dark:text-white">
              Contact Me
            </h2>
            <div className="flex justify-center space-x-6">
              <a
                href="/"
                className="text-gray-600 dark:text-gray-300 hover:text-blue-500"
              >
                <GithubIcon />
              </a>
              <a
                href="/"
                className="text-gray-600 dark:text-gray-300 hover:text-blue-500"
              >
                <Linkedin />
              </a>
              <a
                href="/"
                className="text-gray-600 dark:text-gray-300 hover:text-blue-500"
              >
                <Mail />
              </a>
            </div>
          </div>
        </section>
      </main>

      <footer className="bg-white dark:bg-gray-800 py-4">
        <div className="container mx-auto px-6 text-center text-gray-600 dark:text-gray-300">
          Â© 2024 My Portfolio. All rights reserved.
        </div>
      </footer>
    </div>
  );
};

export default Portfolio;
